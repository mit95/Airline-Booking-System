/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterfaces.ScheduleRole;

import Business.Airliner;
import Business.Flight;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mitka
 */
public class ManageFlightJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFlightJPanel
     */
    private JPanel CardSequenceJPanel;
    private Airliner airliner;

    public ManageFlightJPanel(JPanel CardSequenceJPanel, Airliner a) {
       initComponents();
       this.CardSequenceJPanel = CardSequenceJPanel;
       this.airliner = a;
       
       airlinerNameTextField.setText(airliner.getName());
       populateTable();
    }
    
        public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)tblFlights.getModel();
        dtm.setRowCount(0);
        for(Flight f: airliner.getFlightDirectory().getFlightdirec()){
            Object[] row = new Object[7];
            row[0] = f;
            row[1] = f.getAirplaneNum();
            row[2] = f.getAirplaneSeats();
            row[3] = f.getArrivalLocation();
            row[4] = f.getScheduledate();
            row[5] = f.getDepartureLocation();
            row[6] = f.getTimeOfDay();
            dtm.addRow(row);
        
        }
    
    }
   /** private void populateTable(){
        int rowCount = tblFlights.getRowCount();
        DefaultTableModel model = (DefaultTableModel) tblFlights.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        
        for(Flight f : airliner.getFlightDirectory().getFlightdirec()) {
            Object row[] = new Object[7];
            row[0] = f;
            row[1] = f.getAirplaneType();
            row[2] = f.getAirplaneNum();
            row[3] = f.getDepartureLocation();
            row[4] = f.getArrivalLocation();
            row[5] = f.getScheduledate();
            row[6] = f.getAirplaneSeats();
            row[7] = f.getTimeOfDay();
            model.addRow(row);
            }
        
    
    }*/
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        airlinerNameTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFlights = new javax.swing.JTable();
        btnCreateFlight = new javax.swing.JButton();
        btnViewFlight = new javax.swing.JButton();
        btnDeleteFlight = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnSchedule = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGE AIRLINER FLIGHTS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Airliner:");

        airlinerNameTextField.setEditable(false);
        airlinerNameTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        airlinerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                airlinerNameTextFieldActionPerformed(evt);
            }
        });

        tblFlights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airplane Type", "Airplane Number", "Seats"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFlights);

        btnCreateFlight.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCreateFlight.setText("Create >>");
        btnCreateFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateFlightActionPerformed(evt);
            }
        });

        btnViewFlight.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnViewFlight.setText("View >>");
        btnViewFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewFlightActionPerformed(evt);
            }
        });

        btnDeleteFlight.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDeleteFlight.setText("Delete");
        btnDeleteFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteFlightActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSchedule.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSchedule.setText("Schedule >>");
        btnSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScheduleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel2)
                .addGap(36, 36, 36)
                .addComponent(airlinerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(244, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(234, 234, 234))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnDeleteFlight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(65, 65, 65)
                                .addComponent(btnViewFlight)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnCreateFlight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(221, 221, 221))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(airlinerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateFlight)
                    .addComponent(btnDeleteFlight)
                    .addComponent(btnViewFlight))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnSchedule))
                .addContainerGap(74, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void airlinerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_airlinerNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_airlinerNameTextFieldActionPerformed

    private void btnViewFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewFlightActionPerformed
        // TODO add your handling code here:
        int row = tblFlights.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        
        }
        else{
            Flight f = (Flight) tblFlights.getValueAt(row, 0);
            ViewAirlinerFlightJPanel panel = new ViewAirlinerFlightJPanel(CardSequenceJPanel,f);
            CardSequenceJPanel.add("ViewAirlinerFlightJPanel",panel);
            CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
            layout.next(CardSequenceJPanel);
        }
        
    }//GEN-LAST:event_btnViewFlightActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequenceJPanel.remove(this);
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        layout.previous(CardSequenceJPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteFlightActionPerformed
        // TODO add your handling code here:
        int row = tblFlights.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Flight f = (Flight) tblFlights.getValueAt(row, 0);
        airliner.getFlightDirectory().removeFlight(f);
        populateTable();
    }//GEN-LAST:event_btnDeleteFlightActionPerformed

    private void btnCreateFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateFlightActionPerformed
        // TODO add your handling code here:
        CreateAirlinerFlightJPanel panel = new CreateAirlinerFlightJPanel(CardSequenceJPanel,airliner);
        CardSequenceJPanel.add("CreateAirlinerFlightJPanel",panel);
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        layout.next(CardSequenceJPanel);
        
    }//GEN-LAST:event_btnCreateFlightActionPerformed

    private void btnScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScheduleActionPerformed
        // TODO add your handling code here:
        int row = tblFlights.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a flight to schedule it","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Flight f = (Flight) tblFlights.getValueAt(row, 0);
            ScheduleFlightJPanel panel = new ScheduleFlightJPanel(CardSequenceJPanel, f,airliner);
            CardSequenceJPanel.add("ScheduleFlightJPanel",panel);
            CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
            layout.next(CardSequenceJPanel);
        }
    }//GEN-LAST:event_btnScheduleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField airlinerNameTextField;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateFlight;
    private javax.swing.JButton btnDeleteFlight;
    private javax.swing.JButton btnSchedule;
    private javax.swing.JButton btnViewFlight;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFlights;
    // End of variables declaration//GEN-END:variables
}
